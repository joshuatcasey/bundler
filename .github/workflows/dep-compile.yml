name: Dependencies Compile

on:
  workflow_dispatch:
#    inputs:
#      version:
#        description: Version of the dependency
#        required: true

jobs:
  retrieve:
    name: Retrieve new versions
    runs-on: ubuntu-latest
    outputs:
      new_versions: ${{ steps.retrieve.outputs.new_versions }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup go >=1.18.0
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.18.0'
      - name: Retrieve new version
        id: retrieve
        run: |
          pushd dependency > /dev/null
            versions=$(make retrieve)
            echo "Found versions ${versions}"
            echo "::set-output name=new_versions::${versions}"
          popd > /dev/null
  compile:
    name: Compile Bundler
    needs:
      - retrieve
    strategy:
      matrix:
        os:
        - ubuntu-18.04
        - ubuntu-22.04
        - macos-latest
        version: ${{ fromJSON(needs.retrieve.outputs.new_versions) }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Compile ${{ matrix.version }}
        id: compile
        run: |
          pushd dependency > /dev/null
            make compile version="${{ matrix.version }}"
            echo "::set-output name=tarball_path::bundler-${{ matrix.version }}.tgz"
          popd > /dev/null
      - run: '[[ $(echo "${{ matrix.os }}" | grep "macos") ]] && brew install coreutils || true'
      - name: Test ${{ matrix.version }}
        run: |
          pushd dependency > /dev/null
            make test version="${{ matrix.version }}" tarball_path="${{ steps.compile.outputs.tarball_path }}" os="${{ matrix.os }}"
          popd > /dev/null
